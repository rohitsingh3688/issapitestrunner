{
	"info": {
		"_postman_id": "a546b8bc-a5ea-4e21-a864-cd25ba5041a3",
		"name": "ISS Position Data",
		"schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
	},
	"item": [
		{
			"name": "Get ISS Satellite Position data",
			"event": [
				{
					"listen": "test",
					"script": {
						"exec": [
							"const schema = {\r",
							"    \"type\": \"array\",\r",
							"    \"title\": \"The root schema\",\r",
							"    \"description\": \"The root schema comprises the entire JSON document.\",\r",
							"    \"additionalItems\": true,\r",
							"    \"items\": {\r",
							"        \"id\": \"#/items\",\r",
							"        \"anyOf\": [\r",
							"            {\r",
							"                \"id\": \"#/items/anyOf/0\",\r",
							"                \"type\": \"object\",\r",
							"                \"title\": \"The first anyOf schema\",\r",
							"                \"description\": \"An explanation about the purpose of this instance.\",\r",
							"                \"required\": [\r",
							"                    \"name\",\r",
							"                    \"id\",\r",
							"                    \"latitude\",\r",
							"                    \"longitude\",\r",
							"                    \"altitude\",\r",
							"                    \"velocity\",\r",
							"                    \"visibility\",\r",
							"                    \"footprint\",\r",
							"                    \"timestamp\",\r",
							"                    \"daynum\",\r",
							"                    \"solar_lat\",\r",
							"                    \"solar_lon\",\r",
							"                    \"units\"\r",
							"                ],\r",
							"                \"properties\": {\r",
							"                    \"name\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/name\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The name schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"id\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/id\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The id schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"latitude\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/latitude\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The latitude schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"longitude\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/longitude\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The longitude schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"altitude\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/altitude\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The altitude schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"velocity\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/velocity\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The velocity schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"visibility\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/visibility\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The visibility schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"footprint\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/footprint\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The footprint schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"timestamp\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/timestamp\",\r",
							"                        \"type\": \"integer\",\r",
							"                        \"title\": \"The timestamp schema\",\r",
							"                    },\r",
							"                    \"daynum\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/daynum\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The daynum schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"solar_lat\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/solar_lat\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The solar_lat schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"solar_lon\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/solar_lon\",\r",
							"                        \"type\": \"number\",\r",
							"                        \"title\": \"The solar_lon schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    },\r",
							"                    \"units\": {\r",
							"                        \"id\": \"#/items/anyOf/0/properties/units\",\r",
							"                        \"type\": \"string\",\r",
							"                        \"title\": \"The units schema\",\r",
							"                        \"description\": \"An explanation about the purpose of this instance.\"\r",
							"                    }\r",
							"                },\r",
							"                \"additionalProperties\": true\r",
							"            }\r",
							"        ]\r",
							"    }\r",
							"}\r",
							"const code = pm.iterationData.get(\"status\") || 200;\r",
							"const timestamps = pm.iterationData.get(\"timestamps\");\r",
							"const units = pm.iterationData.get(\"units\") || \"kilometers\";\r",
							"const error = pm.iterationData.get(\"error\");\r",
							"\r",
							"if (code == 200) {\r",
							"    pm.test(\"Validating Schema\", () => {\r",
							"        pm.expect(tv4.validate(pm.response.json(), schema)).to.be.true\r",
							"    })\r",
							"\r",
							"\r",
							"    pm.test(\"Validating Timestamp\", () => {\r",
							"        const array = pm.response.json();\r",
							"        let testResult = array.find((each) => {\r",
							"            return timestamps.indexOf(each.timestamp) < 0\r",
							"        })\r",
							"        pm.expect(testResult).to.be.undefined;\r",
							"    })\r",
							"\r",
							"    pm.test(\"Validating Units\", () => {\r",
							"        const array = pm.response.json();\r",
							"        let testResult = array.find((each) => {\r",
							"            return each.units != units\r",
							"        })\r",
							"        pm.expect(testResult).to.be.undefined;\r",
							"    })\r",
							"\r",
							"    pm.test(\"Validating #records matches #timestamps\", () => {\r",
							"        const array = pm.response.json();\r",
							"        const len = timestamps.indexOf(',')>=0 ? timestamps.split(',').length : 1;\r",
							"        pm.expect(array.length).to.be.eql(len);\r",
							"    })\r",
							"}\r",
							"\r",
							"pm.test(\"validating Content-Type\", function () {\r",
							"    pm.expect(pm.response.headers.get(\"Content-Type\")).to.eql(\"application/json\");\r",
							"})\r",
							"\r",
							"pm.test(\"Validating Status Code\", () => {\r",
							"    pm.expect(pm.response.code).to.eql(code);\r",
							"})\r",
							"\r",
							"if (pm.response.code == 400 && error != null) {\r",
							"    pm.test(\"Validating Error Message\", () => {\r",
							"        pm.expect(pm.response.json().error).to.contains(error);\r",
							"    })\r",
							"}"
						],
						"type": "text/javascript"
					}
				},
				{
					"listen": "prerequest",
					"script": {
						"exec": [
							"pm.collectionVariables.set(\"satelliteId\", pm.iterationData.get(\"satelliteId\"));\r",
							"const timestamps = pm.iterationData.get(\"timestamps\");\r",
							"const units = pm.iterationData.get(\"units\");\r",
							"let queryParam = \"\";\r",
							"if(timestamps!=null)\r",
							"    queryParam = queryParam + \"?timestamps=\" + timestamps;\r",
							"if(units!=null){\r",
							"    if(queryParam!=\"\")\r",
							"        queryParam = queryParam + \"&units=\" + units;\r",
							"    else\r",
							"        queryParam = queryParam + \"?units=\" + units;\r",
							"}\r",
							"pm.collectionVariables.set(\"queryParam\", queryParam);"
						],
						"type": "text/javascript"
					}
				}
			],
			"protocolProfileBehavior": {
				"disableBodyPruning": true
			},
			"request": {
				"method": "GET",
				"header": [],
				"body": {
					"mode": "raw",
					"raw": "",
					"options": {
						"raw": {
							"language": "json"
						}
					}
				},
				"url": {
					"raw": "https://api.wheretheiss.at/v1/satellites/{{satelliteId}}/positions{{queryParam}}",
					"protocol": "https",
					"host": [
						"api",
						"wheretheiss",
						"at"
					],
					"path": [
						"v1",
						"satellites",
						"{{satelliteId}}",
						"positions{{queryParam}}"
					]
				}
			},
			"response": []
		}
	],
	"variable": [
		{
			"key": "satelliteId",
			"value": ""
		},
		{
			"key": "queryParam",
			"value": ""
		}
	]
}